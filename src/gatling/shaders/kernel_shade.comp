#version 450 core

layout(local_size_x=32, local_size_y=32, local_size_z=1) in;

#include "common.glsl"

vec4 shade(const hit_info hit)
{
    const face f = faces[hit.face_index];
    const vec3 n0 = vertices[f.v_0].field2.xyz;
    const vec3 n1 = vertices[f.v_1].field2.xyz;
    const vec3 n2 = vertices[f.v_2].field2.xyz;
    const vec2 bc = hit.bc;

    const vec3 normal = normalize(
        n0 * (1.0 - bc.x - bc.y) +
        n1 * bc.x +
        n2 * bc.y
    );

    const vec4 color = vec4(abs(normal), 1.0);

    return color;
}

void main()
{
    while(true)
    {
        const uint hit_index = atomicAdd(hit_read_counter, 1);
        if (hit_index >= hit_write_counter) {
            return;
        }

        const hit_info hit = hits[hit_index];

        const vec4 color = shade(hit);

        pixels[hit.pixel_index] = color;
    }
}
